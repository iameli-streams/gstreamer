fragment_downloaded_cb({"url":"playback/streamsynchronizer.html#gapless-playback-caveats","fragment":"Gapless playback caveats\nGiven the substantial number of edge cases that need to be handled across a\nlarge code surface, bugs in gapless playback are not uncommon.\nIn general (not only in GStreamer) gapless playback requires several things\nto work:\nBuffering of the new file done well ahead of the previous file.\nFor this purpose urisourcebin emits (and decodebin3, uridecodebin3,\nplaybin and playbin3 propagate) the about-to-finish\nsignal to notify what is the optimal time at which to provide the next uri\nto play.\nExtremely well bounded audio files. This is particularly hard for\ncompressed audio formats. See: codec delay, audio frame sizes. Achieving\narbitrary length of audio in many compressed formats will require either:\nAll autoplugging during the switch must be done without pausing the\npipeline.\nPlayback must be possible without resetting the audio device (e.g. to\nselect a different sampling rate or audio format), or such a switch to be\ndone gapless.\n\n\nBuffering of the new file done well ahead of the previous file.\nFor this purpose urisourcebin emits (and decodebin3, uridecodebin3,\nplaybin and playbin3 propagate) the about-to-finish\nsignal to notify what is the optimal time at which to provide the next uri\nto play.\n\nNote that this requirement applies to the entire pipeline, including\ndecoders and audio sinks.\n\n\n\nExtremely well bounded audio files. This is particularly hard for\ncompressed audio formats. See: codec delay, audio frame sizes. Achieving\narbitrary length of audio in many compressed formats will require either:\n\nContainer features like MP4 edit lists to clip the priming and padding\nPCM samples at the beginning and the end of the file, plus elements\ncorrectly clipping the data accordingly.\nFeatures of the specific audio format used to perform the same clipping\nat the decoder level.\n\n\n\nAll autoplugging during the switch must be done without pausing the\npipeline.\n\n\nPlayback must be possible without resetting the audio device (e.g. to\nselect a different sampling rate or audio format), or such a switch to be\ndone gapless.\n\n\n\nNote that this requirement applies to the entire pipeline, including\ndecoders and audio sinks.\n\n\nContainer features like MP4 edit lists to clip the priming and padding\nPCM samples at the beginning and the end of the file, plus elements\ncorrectly clipping the data accordingly.\nFeatures of the specific audio format used to perform the same clipping\nat the decoder level.\n\n"});