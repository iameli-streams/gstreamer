fragment_downloaded_cb({"url":"video/gstvideoencoder.html#gst_video_encoder_drop_frame","fragment":"\n\tgst_video_encoder_drop_frame\n\n\n\tGstVideo.VideoEncoder.prototype.drop_frame\n\n\n\tGstVideo.VideoEncoder.drop_frame\n\nRemoves frame from the list of pending frames, releases it\nand posts a QoS message with the frame's details on the bus.\nSimilar to calling gst_video_encoder_finish_frame without a buffer\nattached to frame, but this function additionally stores events\nfrom frame as pending, to be pushed out alongside the next frame\nsubmitted via gst_video_encoder_finish_frame.\nParameters:\na GstVideoEncoder\na GstVideoCodecFrame\n\n\tSince\t\t\t: 1.26\n\t\t\nRemoves frame from the list of pending frames, releases it\nand posts a QoS message with the frame's details on the bus.\nSimilar to calling GstVideo.VideoEncoder.prototype.finish_frame without a buffer\nattached to frame, but this function additionally stores events\nfrom frame as pending, to be pushed out alongside the next frame\nsubmitted via GstVideo.VideoEncoder.prototype.finish_frame.\nParameters:\na GstVideo.VideoEncoder\na GstVideo.VideoCodecFrame\n\n\tSince\t\t\t: 1.26\n\t\t\nRemoves frame from the list of pending frames, releases it\nand posts a QoS message with the frame's details on the bus.\nSimilar to calling GstVideo.VideoEncoder.finish_frame without a buffer\nattached to frame, but this function additionally stores events\nfrom frame as pending, to be pushed out alongside the next frame\nsubmitted via GstVideo.VideoEncoder.finish_frame.\nParameters:\na GstVideo.VideoEncoder\na GstVideo.VideoCodecFrame\n\n\tSince\t\t\t: 1.26\n\t\t\n"});